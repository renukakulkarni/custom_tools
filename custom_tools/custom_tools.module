<?php

/**
 * @file
 * Contains settings and common functionality code on site.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function custom_tools_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'system_site_information_settings':
      $siteapikey = \Drupal::configFactory()->getEditable('system.site')->get('siteapikey');
      $form['site_api_key_wrapper'] = array(
        '#type' => 'details',
        '#title' => t('Site API Key'),
        '#open' => TRUE,
      );
      $form['site_api_key_wrapper']['site_api_key'] = array(
        '#type' => 'textfield',
        '#title' => t('Site API key'),
        '#default_value' => empty($siteapikey) ? t('No API Key yet') : $siteapikey,
        '#required' => FALSE,
      );
      $form['actions']['submit']['#value'] = t('Update Configuration');
      $form['#submit'][] = 'custom_system_site_info_submit';
      break;

    default:
      break;
  }
}

/**
 * Custom submit function for system site information settings.
 */
function custom_system_site_info_submit($form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('system.site')
    ->set('siteapikey', $form_state->getValue('site_api_key'))
    ->save();
  if (!empty($form_state->getValue('site_api_key')) && $form_state->getValue('site_api_key') !== 'No API Key yet') {
    drupal_set_message(t('Site API key has been saved with the value %api_key.', array('%api_key' => $form_state->getValue('site_api_key'))));
  }
}
